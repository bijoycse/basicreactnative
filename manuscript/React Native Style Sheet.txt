# React Native Style Sheet

**Style**
With React Native, you don't use a special language or syntax for defining styles. You just style your application using JavaScript. All of the core components accept a prop named style. The style names and values usually match how CSS works on the web, except names are written using camel casing, e.g. backgroundColor rather than background-color.

The style prop can be a plain old JavaScript object. That's the simplest and what we usually use for example code. You can also pass an array of styles - the last style in the array has precedence, so you can use this to inherit styles.

As a component grows in complexity, it is often cleaner to use StyleSheet.create to define several styles in one place. Here's an example:

import React, { Component } from 'react';
import { StyleSheet, Text, View } from 'react-native';

const styles = StyleSheet.create({
  bigBlue: {
    color: 'blue',
    fontWeight: 'bold',
    fontSize: 30,
  },
  red: {
    color: 'red',
  },
});

export default class LotsOfStyles extends Component {
  render() {
    return (
      <View>
        <Text style={styles.red}>just red</Text>
        <Text style={styles.bigBlue}>just bigBlue</Text>
        <Text style={[styles.bigBlue, styles.red]}>bigBlue, then red</Text>
        <Text style={[styles.red, styles.bigBlue]}>red, then bigBlue</Text>
      </View>
    );
  }
}

Please visit 
https://github.com/vhpoet/react-native-styling-cheat-sheet

**HOW REACT NATIVE IS DIFFERENT TO CSS**
The code below shows a simple example of the different between CSS and react native style.

**CSS style**

.container{
  width: 200px;
  background-color: white;
}

The same style in react native will look like below.

React Native Style

//import StyleSheet

var styles = StyleSheet.create({

   container:{
      width: 200,
      backgroundColor: 'white'
  }

});

**INLINE STYLING**
style={{width: 200, height: 40, backgroundColor: 'green'}}
